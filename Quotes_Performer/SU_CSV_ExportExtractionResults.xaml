<Activity mc:Ignorable="sap sap2010" x:Class="CSV_ExportExtractionResults" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:al="clr-namespace:ARL_Framework.Logging_and_Reporting;assembly=ARL_Framework" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:q="clr-namespace:QuotesEntities_Legacy;assembly=DataService.QuotesEntities_Legacy" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="[REQUIRED] Contains the File entity record data to update the CSV datatable" Name="FileEntityRecord" Type="InArgument(q:CommercialRiskQuotesFile)" />
    <x:Property sap2010:Annotation.AnnotationText="[REQUIRED] Contains the Source entity record data to update the CSV datatable" Name="DocumentEntityRecord" Type="InArgument(q:CommercialRiskQuotesDocument)" />
    <x:Property sap2010:Annotation.AnnotationText="[REQUIRED] Contains the Source entity record data to update the CSV datatable" Name="SourceEntityRecord" Type="InArgument(q:CommercialRiskQuotesSource)" />
    <x:Property sap2010:Annotation.AnnotationText="[REQUIRED] Contains Dict Config as dict&lt;Of string, string&gt;" Name="DictConfig" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property sap2010:Annotation.AnnotationText="[REQUIRED] Contains new file name convention" Name="ChangedFileName" Type="OutArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="[REQUIRED] DataTable initialized. The CSV records will be updated here." Name="DtResult" Type="InOutArgument(sd:DataTable)" />
    <x:Property sap2010:Annotation.AnnotationText="[REQUIRED] Input Json file path" Name="PathJSONResultsFile" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="[REQUIRED] Contains the output CSV report File path" Name="PathCSVFile" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1435.33333333333,1749.33333333333</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>CSV_ExportExtractionResults_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>ARL_Framework.Logging_and_Reporting</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>QuotesEntities_Legacy</x:String>
      <x:String>UiPath.DataService.Definition</x:String>
      <x:String>NA_9_ARL_QuotesDataServiceEntities</x:String>
      <x:String>UiPath.DataService.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>ARF</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>ARL_Framework</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities.Design</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>DataService.QuotesEntities_Legacy</AssemblyReference>
      <AssemblyReference>UiPath.DataService.Definition</AssemblyReference>
      <AssemblyReference>NA-9_ARL_QuotesDataServiceEntities</AssemblyReference>
      <AssemblyReference>UiPath.DataService.Activities.Core</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>DataService.ARF</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="With this workflow the bot will extract the dta from the input JSON file an will write the CSV output report&#xD;&#xA;&#xD;&#xA;In Arguments:&#xD;&#xA;- FileEntityRecord = File Entity Record data&#xD;&#xA;- DocumentEntityRecord = Document Entity Record data&#xD;&#xA;- SourceEntityRecord = Source Entity Record data&#xD;&#xA;- DictConfig = config.json&#xD;&#xA;- PathJSONResultsFile = input JSON file path&#xD;&#xA;&#xD;&#xA;Out Arguments:&#xD;&#xA;- ChangedFileName = New name for the input pdf file&#xD;&#xA;- PathCSVFile = csv report path&#xD;&#xA;&#xD;&#xA;io Arguments:&#xD;&#xA;- DtResult = Appending output data&#xD;&#xA;" DisplayName="CSV_ExportExtractionResults" sap:VirtualizedContainerService.HintSize="512,1684.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="[REQUIRED] This is the output variable for the Read Json activity. Will contains Json data" Name="jsonData" />
      <Variable x:TypeArguments="njl:JObject" sap2010:Annotation.AnnotationText="[REQUIRED] Contains the Json data after the deserialize activity" Name="jsonObject" />
      <Variable x:TypeArguments="njl:JToken" sap2010:Annotation.AnnotationText="[REQUIRED] JObject to Jtoken" Name="layerTable" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="[REQUIRED] Json data as String" Name="strLayertable" />
      <Variable x:TypeArguments="njl:JArray" sap2010:Annotation.AnnotationText="[REQUIRED] Array of String Json data" Name="layerArray" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="[REQUIRED] by default it's &quot;N/A&quot;. It will change to &quot;User validated&quot; if the ValidationResults key exists in the JSON file" Name="userValidated" />
      <Variable x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="[REQUIRED] Index to determine the current row in the layer table" Name="IndexLayerArray" />
      <Variable x:TypeArguments="x:Boolean" sap2010:Annotation.AnnotationText="[REQUIRED] Boolean - True if the output  CSV file was previously generated." Name="flagReportFileCreated" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <al:Logging ErrorCode="{x:Null}" ErrorDescription="{x:Null}" ExceptionObject="{x:Null}" FlagInfo="{x:Null}" DisplayName="Log Step 2.1 - CSV file" sap:VirtualizedContainerService.HintSize="450,25.3333333333333" sap2010:WorkflowViewState.IdRef="Logging_6" LogMessage="Step 2.1 - Write CSV" />
    <al:Logging ErrorCode="{x:Null}" ErrorDescription="{x:Null}" ExceptionObject="{x:Null}" FlagInfo="{x:Null}" DisplayName="Logging - JSON extraction" sap:VirtualizedContainerService.HintSize="450,25.3333333333333" sap2010:WorkflowViewState.IdRef="Logging_1" LogMessage="The bot will read the JSONResults file " />
    <ui:MultipleAssign DisplayName="Multiple Assign - Initial assignments" sap:VirtualizedContainerService.HintSize="450,131.333333333333" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[PathCSVFile]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[DictConfig("Asset_PerformerCSVSharedFolderPath")+DictConfig("Asset_CSV_ReportName")+".csv"]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[userValidated]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[DictConfig("UserValidatedDefaultValue")]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:MultipleAssign>
    <ui:PathExists Resource="{x:Null}" DisplayName="Path Exists - CSV file" Exists="[flagReportFileCreated]" sap:VirtualizedContainerService.HintSize="450,92" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="[PathCSVFile]" PathType="File" />
    <If Condition="[NOT flagReportFileCreated]" DisplayName="If - CSV file was created" sap:VirtualizedContainerService.HintSize="450,25.3333333333333" sap2010:WorkflowViewState.IdRef="If_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence DisplayName="Not created" sap:VirtualizedContainerService.HintSize="450,268.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_7">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:CopyFile ContinueOnError="{x:Null}" Destination="[PathCSVFile]" DisplayName="Copy the CSV Template" sap:VirtualizedContainerService.HintSize="388,158" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="True" Path="[DictConfig(&quot;Asset_PerformerOutputTemplatePath&quot;)]" />
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_8">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </If.Else>
    </If>
    <ui:ReadTextFile File="{x:Null}" Content="[jsonData]" DisplayName="Read - input JSON file" FileName="[PathJSONResultsFile]" sap:VirtualizedContainerService.HintSize="450,82" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
    <Sequence sap2010:Annotation.AnnotationText="With this activities, the bot will change de Json object structure to write the CSV file" DisplayName="Json file handling" sap:VirtualizedContainerService.HintSize="450,80" sap2010:WorkflowViewState.IdRef="Sequence_5">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize - input JSON file" sap:VirtualizedContainerService.HintSize="434,63.3333333333333" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_2" JsonObject="[jsonObject]" JsonString="[jsonData]" />
      <Assign DisplayName="Assign - JsonObject as Jtoken for LayerTable" sap:VirtualizedContainerService.HintSize="434,85.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_2">
        <Assign.To>
          <OutArgument x:TypeArguments="njl:JToken">[layerTable]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="njl:JToken">[jsonObject("OutputResults")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign - JToken to String for LayerTable" sap:VirtualizedContainerService.HintSize="434,85.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_4">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strLayertable]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[layertable("Layer Table").ToString()]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign - String to JArray for LayerTable" sap:VirtualizedContainerService.HintSize="434,85.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_5">
        <Assign.To>
          <OutArgument x:TypeArguments="njl:JArray">[layerArray]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="njl:JArray">[JArray.Parse(strLayertable)]</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
    <If Condition="[jsonObject.ContainsKey(&quot;ValidationResults&quot;)]" DisplayName="If - ValidationResults exists in the JSON file" sap:VirtualizedContainerService.HintSize="450,25.3333333333333" sap2010:WorkflowViewState.IdRef="If_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence DisplayName="Sequence - if - ValidationResults exists in the JSON file" sap:VirtualizedContainerService.HintSize="496,261.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <al:Logging ErrorCode="{x:Null}" ErrorDescription="{x:Null}" ExceptionObject="{x:Null}" FlagInfo="{x:Null}" DisplayName="Logging - Validation" sap:VirtualizedContainerService.HintSize="434,25.3333333333333" sap2010:WorkflowViewState.IdRef="Logging_2" LogMessage="Validation station was needed" />
          <Assign DisplayName="Assign - User Validated for csv report" sap:VirtualizedContainerService.HintSize="434,85.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_8">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[userValidated]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[DictConfig("UserValidatedExecuted")]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="450,104.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </If.Else>
    </If>
    <ui:ForEach x:TypeArguments="njl:JToken" CurrentIndex="[IndexLayerArray]" DisplayName="For Each - iterates the layer array" sap:VirtualizedContainerService.HintSize="450,25.3333333333333" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[layerArray]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="njl:JToken">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="njl:JToken" Name="currentItem" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Layer Array" sap:VirtualizedContainerService.HintSize="450,302" sap2010:WorkflowViewState.IdRef="Sequence_6">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{DocumentEntityRecord.Id,DocumentEntityRecord.Id.ToString+&quot;_&quot;+(dtResult.RowCount+1).ToString,DocumentEntityRecord.CreateTime,SourceEntityRecord.ReceiveDate,SourceEntityRecord.ReceiveDate,UserValidated,DocumentEntityRecord.ValidationEnd,DocumentEntityRecord.ValidatedBy,FileEntityRecord.FilePath,SourceEntityRecord.FromName,SourceEntityRecord.FromEmail,SourceEntityRecord.ToName,SourceEntityRecord.ToEmail,SourceEntityRecord.Subject,SourceEntityRecord.SourceType,jsonObject(&quot;OutputResults&quot;)(&quot;Carrier Quote Reference&quot;).ToString,jsonObject(&quot;OutputResults&quot;)(&quot;Quote Issue Date&quot;).ToString,jsonObject(&quot;OutputResults&quot;)(&quot;Type of Quote&quot;).ToString,jsonObject(&quot;OutputResults&quot;)(&quot;Policy Reference&quot;).ToString,jsonObject(&quot;OutputResults&quot;)(&quot;Quote Validity Period&quot;).ToString,jsonObject(&quot;OutputResults&quot;)(&quot;Carrier Name&quot;).ToString,jsonObject(&quot;OutputResults&quot;)(&quot;Broker Name&quot;).ToString,jsonObject(&quot;OutputResults&quot;)(&quot;Underwriter Name&quot;).ToString,&quot;&quot;,jsonObject(&quot;OutputResults&quot;)(&quot;Insured Name&quot;).ToString,&quot;&quot;,&quot;&quot;,&quot;&quot;,jsonObject(&quot;OutputResults&quot;)(&quot;Inception Date&quot;).ToString,jsonObject(&quot;OutputResults&quot;)(&quot;Expiry Date&quot;).ToString,jsonObject(&quot;OutputResults&quot;)(&quot;Total Insured Value&quot;).ToString,&quot;&quot;,&quot;&quot;,jsonObject(&quot;OutputResults&quot;)(&quot;Coverage Type&quot;).ToString,layerArray(IndexLayerArray)(&quot;Layer Premium&quot;).ToString(),layerArray(IndexLayerArray)(&quot;Attachment Point&quot;).ToString(),layerArray(IndexLayerArray)(&quot;Limit of Liability&quot;).ToString(),layerArray(IndexLayerArray)(&quot;Capacity&quot;).ToString(),jsonObject(&quot;OutputResults&quot;)(&quot;Deductible&quot;).ToString,jsonObject(&quot;OutputResults&quot;)(&quot;Sublimits&quot;).ToString,jsonObject(&quot;OutputResults&quot;)(&quot;Currency&quot;).ToString,&quot;&quot;,jsonObject(&quot;OutputResults&quot;)(&quot;Commission&quot;).ToString,jsonObject(&quot;OutputResults&quot;)(&quot;Conditions&quot;).ToString,jsonObject(&quot;OutputResults&quot;)(&quot;Subjectivities&quot;).ToString,jsonObject(&quot;OutputResults&quot;)(&quot;Exclusions&quot;).ToString,jsonObject(&quot;OutputResults&quot;)(&quot;Situation&quot;).ToString,layerArray(IndexLayerArray)(&quot;TRIA Premium&quot;).ToString(),jsonObject(&quot;OutputResults&quot;)(&quot;Quote Validity Date&quot;).ToString,jsonObject(&quot;OutputResults&quot;)(&quot;Policy Period&quot;).ToString,jsonObject(&quot;OutputResults&quot;)(&quot;Carrier ID&quot;).ToString,jsonObject(&quot;OutputResults&quot;)(&quot;Product&quot;).ToString}]" DataTable="[DtResult]" DisplayName="Add Data Row - CSV report After validation" sap:VirtualizedContainerService.HintSize="388,191.333333333333" sap2010:WorkflowViewState.IdRef="AddDataRow_5" />
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <al:Logging ErrorCode="{x:Null}" ErrorDescription="{x:Null}" ExceptionObject="{x:Null}" FlagInfo="{x:Null}" DisplayName="Logging - Write Add rows to dt" sap:VirtualizedContainerService.HintSize="450,25.3333333333333" sap2010:WorkflowViewState.IdRef="Logging_4" LogMessage="The bot will write the output CSV report" />
    <Assign DisplayName="Assign - New current file name" sap:VirtualizedContainerService.HintSize="450,85.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_9">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[ChangedFileName]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[jsonObject("OutputResults")("Insured Name").ToString+"_"+jsonObject("OutputResults")("Carrier Name").ToString+"_"+DocumentEntityRecord.Id.ToString+"_"+(dtResult.RowCount).ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign - Removing prohibited characters" sap:VirtualizedContainerService.HintSize="450,85.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_11">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[ChangedFileName]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(ChangedFileName, "[\\\/\*\:\?\""\&lt;\&gt;\|]", "_")]</InArgument>
      </Assign.Value>
    </Assign>
    <al:Logging ErrorCode="{x:Null}" ErrorDescription="{x:Null}" ExceptionObject="{x:Null}" FlagInfo="{x:Null}" DisplayName="Logging - CSV completed" sap:VirtualizedContainerService.HintSize="450,25.3333333333333" sap2010:WorkflowViewState.IdRef="Logging_5" LogMessage="The current output data was added to the output data table" />
    <al:Logging ErrorCode="{x:Null}" ErrorDescription="{x:Null}" ExceptionObject="{x:Null}" FlagInfo="{x:Null}" DisplayName="Log Step 2.1 - Add rows to output datatable" sap:VirtualizedContainerService.HintSize="450,25.3333333333333" sap2010:WorkflowViewState.IdRef="Logging_7" LogMessage="Step 2.1 - Finished" />
  </Sequence>
</Activity>